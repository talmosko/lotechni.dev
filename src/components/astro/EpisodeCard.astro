---
import EpisodeCardDescription from '@components/react/EpisodeCardDescription'
import type { Episode } from '@data/types/spotifyEpisodes'
import Heading from '@components/astro/typography/Heading.astro'
import EpisodeShareButton from './EpisodeShareButton.astro'
import { cleanHtmlContent } from '@utils/cleanHtml'
import { Image } from 'astro:assets'

interface Props extends Episode {
  expandable?: boolean
}

const {
  name,
  description,
  html_description,
  images,
  id,
  episode_number,
  release_date,
  expandable = true,
} = Astro.props

const cleanedHtmlDescription = cleanHtmlContent(html_description)

const episodeImage = images[0]
---

<div
  class="scrollbar-hide flex flex-col overflow-hidden rounded-lg bg-surface p-6 text-base text-white shadow-inner shadow-white/10">
  <div class="scrollbar-hide space-y-4 overflow-hidden pb-5">
    {
      id ? (
        <iframe
          class="scrollbar-hide rounded-lg"
          style="scrollbar-width: none; -ms-overflow-style: none; ::-webkit-scrollbar { display: none; }"
          src={`https://open.spotify.com/embed/episode/${id}/video?utm_source=generator`}
          width="100%"
          height="300"
          allowfullscreen
          allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
          loading="lazy"
          title={name}
        />
      ) : (
        <Image
          src={episodeImage.url}
          alt={name}
          width={episodeImage.width ?? 300}
          height={episodeImage.height ?? 300}
          format="webp"
        />
      )
    }
  </div>
  <div class="flex min-h-12 items-start">
    <Heading level={5}>
      {name}
    </Heading>
  </div>
  <div class="flex items-center justify-between border-b border-white/10 pb-4">
    <p class="text-sm text-gray-400">
      {
        new Date(release_date).toLocaleDateString('he-IL', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })
      }
    </p>
    <EpisodeShareButton show_number={episode_number} />
  </div>

  <EpisodeCardDescription
    description={description}
    html_description={cleanedHtmlDescription}
    expandable={expandable}
    client:load
  />
</div>
