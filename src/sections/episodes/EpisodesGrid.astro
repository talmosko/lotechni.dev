---
import Heading from '@components/astro/typography/Heading.astro'
import EpisodeCard from '@components/astro/EpisodeCard.astro'
import SectionContainer from '@components/astro/containers/SectionContainer.astro'
interface Props {
  compact?: boolean
  excludeEpisode?: number
}

const { compact = false, excludeEpisode } = Astro.props
import { $showData } from '@stores/episodes'
import Button from '@components/astro/Button.astro'
import Icon from '@components/astro/Icon.astro'
const show = $showData.get().data

if (!show) {
  throw new Error('No show data found')
}
let parsedEpisodes = show.episodes.items
if (excludeEpisode) {
  parsedEpisodes = parsedEpisodes.filter((episode) => episode.episode_number !== excludeEpisode)
}

const shownEpisodes = compact
  ? excludeEpisode
    ? parsedEpisodes.sort(() => Math.random() - 0.5).slice(0, 4)
    : parsedEpisodes.slice(0, 4)
  : parsedEpisodes
---

<>
  <ul role="list" class="mx-auto grid grid-cols-1 gap-8 p-0 md:grid-cols-2">
    {shownEpisodes.map((episode) => <EpisodeCard {...episode} show_iframe={false} />)}
  </ul>

  {
    compact && (
      <div class="mt-8 flex justify-center">
        <Button size="xl" variant="link" class="flex items-center gap-2" href="/episodes">
          <Icon icon="headphones" />
          לכל הפרקים
        </Button>
      </div>
    )
  }
</>
